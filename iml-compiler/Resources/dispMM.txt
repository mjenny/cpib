<program>
  terminal PROGRAM
    PROGRAM IDENT <progamParameterList> <optionalGlobalDeclarations> DO <blockCmd> ENDPROGRAM
<blockCmd>
  terminal DEBUGOUT
    <cmd> <repeatingOptionalCmds>
  terminal DEBUGIN
    <cmd> <repeatingOptionalCmds>
  terminal CALL
    <cmd> <repeatingOptionalCmds>
  terminal WHILE
    <cmd> <repeatingOptionalCmds>
  terminal IF
    <cmd> <repeatingOptionalCmds>
  terminal LPAREN
    <cmd> <repeatingOptionalCmds>
  terminal ADDOPR
    <cmd> <repeatingOptionalCmds>
  terminal NOT
    <cmd> <repeatingOptionalCmds>
  terminal IDENT
    <cmd> <repeatingOptionalCmds>
  terminal LITERAL
    <cmd> <repeatingOptionalCmds>
  terminal SKIP
    <cmd> <repeatingOptionalCmds>
<cmd>
  terminal SKIP
    SKIP
  terminal LPAREN
    <expression> BECOMES <expression>
  terminal ADDOPR
    <expression> BECOMES <expression>
  terminal NOT
    <expression> BECOMES <expression>
  terminal IDENT
    <expression> BECOMES <expression>
  terminal LITERAL
    <expression> BECOMES <expression>
  terminal IF
    IF <expression> THEN <blockCmd> ELSE <blockCmd> ENDIF
  terminal WHILE
    WHILE <expression> DO <blockCmd> ENDWHILE
  terminal CALL
    CALL IDENT <expressionList> <optionalGlobalInits>
  terminal DEBUGIN
    DEBUGIN <expression>
  terminal DEBUGOUT
    DEBUGOUT <expression>
<optionalGlobalInits>
  terminal ENDPROC

  terminal ENDFUN

  terminal ENDWHILE

  terminal ENDIF

  terminal ELSE

  terminal ENDPROGRAM

  terminal SEMICOLON

  terminal INIT
    INIT <idents>
<idents>
  terminal IDENT
    IDENT <repeatingOptionalIdents>
<repeatingOptionalIdents>
  terminal ENDPROC

  terminal ENDFUN

  terminal ENDWHILE

  terminal ENDIF

  terminal ELSE

  terminal ENDPROGRAM

  terminal SEMICOLON

  terminal COMMA
    COMMA <idents>
<repeatingOptionalCmds>
  terminal ENDPROC

  terminal ENDFUN

  terminal ENDWHILE

  terminal ENDIF

  terminal ELSE

  terminal ENDPROGRAM

  terminal SEMICOLON
    SEMICOLON <blockCmd>
<declaration>
  terminal IDENT
    <storageDeclaration>
  terminal CHANGEMODE
    <storageDeclaration>
  terminal FUN
    <functionDeclaration>
  terminal PROC
    <procedureDeclaration>
  terminal RECORD
    <recordDeclaration>
<storageDeclaration>
  terminal IDENT
    <optionalCHANGEMODE> <typedIdent>
  terminal CHANGEMODE
    <optionalCHANGEMODE> <typedIdent>
<optionalCHANGEMODE>
  terminal IDENT

  terminal CHANGEMODE
    CHANGEMODE
<optionalFLOWMODE>
  terminal MECHMODE

  terminal IDENT

  terminal CHANGEMODE

  terminal FLOWMODE
    FLOWMODE
<optionalMECHMODE>
  terminal IDENT

  terminal CHANGEMODE

  terminal MECHMODE
    MECHMODE
<typedIdent>
  terminal IDENT
    IDENT COLON <typeDeclaration>
<typeDeclaration>
  terminal TYPE
    TYPE
  terminal IDENT
    IDENT
<functionDeclaration>
  terminal FUN
    FUN IDENT <parameterList> RETURNS <storageDeclaration> <optionalGlobalDeclarations> <optionalLocalStorageDeclarations> DO <blockCmd> ENDFUN
<procedureDeclaration>
  terminal PROC
    PROC IDENT <parameterList> <optionalGlobalDeclarations> <optionalLocalStorageDeclarations> DO <blockCmd> ENDPROC
<progamParameterList>
  terminal LPAREN
    LPAREN <optionalProgramParameters> RPAREN
<optionalProgramParameters>
  terminal RPAREN

  terminal IDENT
    <optionalFLOWMODE> <optionalCHANGEMODE> <typedIdent> <repeatingOptionalProgramParameters>
  terminal CHANGEMODE
    <optionalFLOWMODE> <optionalCHANGEMODE> <typedIdent> <repeatingOptionalProgramParameters>
  terminal FLOWMODE
    <optionalFLOWMODE> <optionalCHANGEMODE> <typedIdent> <repeatingOptionalProgramParameters>
<repeatingOptionalProgramParameters>
  terminal RPAREN

  terminal COMMA
    COMMA <optionalFLOWMODE> <optionalCHANGEMODE> <typedIdent> <repeatingOptionalProgramParameters>
<optionalGlobalDeclarations>
  terminal LOCAL

  terminal DO

  terminal GLOBAL
    GLOBAL <declarations>
<declarations>
  terminal RECORD
    <declaration> <repeatingOptionalDeclarations>
  terminal PROC
    <declaration> <repeatingOptionalDeclarations>
  terminal FUN
    <declaration> <repeatingOptionalDeclarations>
  terminal IDENT
    <declaration> <repeatingOptionalDeclarations>
  terminal CHANGEMODE
    <declaration> <repeatingOptionalDeclarations>
<repeatingOptionalDeclarations>
  terminal LOCAL

  terminal DO

  terminal SEMICOLON
    SEMICOLON <declaration> <repeatingOptionalDeclarations>
<optionalLocalStorageDeclarations>
  terminal DO

  terminal LOCAL
    LOCAL <storageDeclaration> <repeatingOptionalStorageDeclarations>
<repeatingOptionalStorageDeclarations>
  terminal LOCAL

  terminal SEMICOLON

  terminal DO

  terminal COMMA
    COMMA <storageDeclaration> <repeatingOptionalStorageDeclarations>
<parameterList>
  terminal LPAREN
    LPAREN <optionalParameters> RPAREN
<optionalParameters>
  terminal RPAREN

  terminal IDENT
    <parameter> <repeatingOptionalParameters>
  terminal CHANGEMODE
    <parameter> <repeatingOptionalParameters>
  terminal MECHMODE
    <parameter> <repeatingOptionalParameters>
  terminal FLOWMODE
    <parameter> <repeatingOptionalParameters>
<parameter>
  terminal IDENT
    <optionalFLOWMODE> <optionalMECHMODE> <optionalCHANGEMODE> <typedIdent>
  terminal CHANGEMODE
    <optionalFLOWMODE> <optionalMECHMODE> <optionalCHANGEMODE> <typedIdent>
  terminal MECHMODE
    <optionalFLOWMODE> <optionalMECHMODE> <optionalCHANGEMODE> <typedIdent>
  terminal FLOWMODE
    <optionalFLOWMODE> <optionalMECHMODE> <optionalCHANGEMODE> <typedIdent>
<repeatingOptionalParameters>
  terminal RPAREN

  terminal COMMA
    COMMA <optionalParameters>
<recordDeclaration>
  terminal RECORD
    RECORD IDENT <parameterStorageList>
<parameterStorageList>
  terminal IDENT
    <storageDeclaration> <repeatingOptionalStorageDeclarations>
  terminal CHANGEMODE
    <storageDeclaration> <repeatingOptionalStorageDeclarations>
<expressionList>
  terminal LPAREN
    LPAREN <optionalExpressions> RPAREN
<optionalExpressions>
  terminal RPAREN

  terminal LPAREN
    <expression> <repeatingOptionalExpressions>
  terminal ADDOPR
    <expression> <repeatingOptionalExpressions>
  terminal NOT
    <expression> <repeatingOptionalExpressions>
  terminal IDENT
    <expression> <repeatingOptionalExpressions>
  terminal LITERAL
    <expression> <repeatingOptionalExpressions>
<expression>
  terminal LPAREN
    <term1> <repBOOLOPRterm1>
  terminal ADDOPR
    <term1> <repBOOLOPRterm1>
  terminal NOT
    <term1> <repBOOLOPRterm1>
  terminal IDENT
    <term1> <repBOOLOPRterm1>
  terminal LITERAL
    <term1> <repBOOLOPRterm1>
<repeatingOptionalExpressions>
  terminal RPAREN

  terminal COMMA
    COMMA <optionalExpressions>
<repBOOLOPRterm1>
  terminal RPAREN

  terminal COMMA

  terminal DO

  terminal THEN

  terminal ENDPROC

  terminal ENDFUN

  terminal ENDWHILE

  terminal ENDIF

  terminal ELSE

  terminal ENDPROGRAM

  terminal SEMICOLON

  terminal BECOMES

  terminal BOOLOPR
    BOOLOPR <term1> <repBOOLOPRterm1>
<term1>
  terminal LPAREN
    <term2> <repRELOPRterm2>
  terminal ADDOPR
    <term2> <repRELOPRterm2>
  terminal NOT
    <term2> <repRELOPRterm2>
  terminal IDENT
    <term2> <repRELOPRterm2>
  terminal LITERAL
    <term2> <repRELOPRterm2>
<repRELOPRterm2>
  terminal RPAREN

  terminal COMMA

  terminal DO

  terminal THEN

  terminal ENDPROC

  terminal ENDFUN

  terminal ENDWHILE

  terminal ENDIF

  terminal ELSE

  terminal ENDPROGRAM

  terminal SEMICOLON

  terminal BECOMES

  terminal BOOLOPR

  terminal RELOPR
    RELOPR <term2> <repRELOPRterm2>
<term2>
  terminal LPAREN
    <term3> <repADDOPRterm3>
  terminal ADDOPR
    <term3> <repADDOPRterm3>
  terminal NOT
    <term3> <repADDOPRterm3>
  terminal IDENT
    <term3> <repADDOPRterm3>
  terminal LITERAL
    <term3> <repADDOPRterm3>
<repADDOPRterm3>
  terminal ADDOPR
    ADDOPR <term3> <repADDOPRterm3>
  terminal RPAREN

  terminal COMMA

  terminal DO

  terminal THEN

  terminal ENDPROC

  terminal ENDFUN

  terminal ENDWHILE

  terminal ENDIF

  terminal ELSE

  terminal ENDPROGRAM

  terminal SEMICOLON

  terminal BECOMES

  terminal BOOLOPR

  terminal RELOPR

<term3>
  terminal LPAREN
    <term4> <repMULTOPRterm4>
  terminal ADDOPR
    <term4> <repMULTOPRterm4>
  terminal NOT
    <term4> <repMULTOPRterm4>
  terminal IDENT
    <term4> <repMULTOPRterm4>
  terminal LITERAL
    <term4> <repMULTOPRterm4>
<repMULTOPRterm4>
  terminal RPAREN

  terminal COMMA

  terminal DO

  terminal THEN

  terminal ENDPROC

  terminal ENDFUN

  terminal ENDWHILE

  terminal ENDIF

  terminal ELSE

  terminal ENDPROGRAM

  terminal SEMICOLON

  terminal BECOMES

  terminal BOOLOPR

  terminal RELOPR

  terminal ADDOPR

  terminal MULTOPR
    MULTOPR <term4> <repMULTOPRterm4>
<term4>
  terminal LPAREN
    <factor> <repDOTOPRfactor>
  terminal ADDOPR
    <factor> <repDOTOPRfactor>
  terminal NOT
    <factor> <repDOTOPRfactor>
  terminal IDENT
    <factor> <repDOTOPRfactor>
  terminal LITERAL
    <factor> <repDOTOPRfactor>
<repDOTOPRfactor>
  terminal RPAREN

  terminal COMMA

  terminal DO

  terminal THEN

  terminal ENDPROC

  terminal ENDFUN

  terminal ENDWHILE

  terminal ENDIF

  terminal ELSE

  terminal ENDPROGRAM

  terminal SEMICOLON

  terminal BECOMES

  terminal BOOLOPR

  terminal RELOPR

  terminal ADDOPR

  terminal MULTOPR

  terminal DOTOPR
    DOTOPR <factor> <repDOTOPRfactor>
<factor>
  terminal LITERAL
    LITERAL
  terminal IDENT
    IDENT <optionalIdent>
  terminal ADDOPR
    <monadicOperator> <factor>
  terminal NOT
    <monadicOperator> <factor>
  terminal LPAREN
    LPAREN <expression> RPAREN
<optionalIdent>
  terminal RPAREN

  terminal COMMA

  terminal DO

  terminal THEN

  terminal ENDPROC

  terminal ENDFUN

  terminal ENDWHILE

  terminal ENDIF

  terminal ELSE

  terminal ENDPROGRAM

  terminal SEMICOLON

  terminal BECOMES

  terminal BOOLOPR

  terminal RELOPR

  terminal ADDOPR

  terminal MULTOPR

  terminal DOTOPR

  terminal INIT
    INIT
  terminal LPAREN
    <expressionList>
<monadicOperator>
  terminal NOT
    NOT
  terminal ADDOPR
    ADDOPR
val it = () : unit